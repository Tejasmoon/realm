import"../chunks/DsnmJJEf.js";import{i as x}from"../chunks/JBQ92pzT.js";import{J as D,K as _,L as K,M as B,N as G,O as C,P as J,Q as W,R as M,F as j,S as V,T as A}from"../chunks/a81xEQtJ.js";import{e as v,s as $}from"../chunks/Blii90vH.js";function I(t,e,i,n){function o(s){return s instanceof i?s:new i(function(a){a(s)})}return new(i||(i=Promise))(function(s,a){function c(f){try{d(n.next(f))}catch(l){a(l)}}function r(f){try{d(n.throw(f))}catch(l){a(l)}}function d(f){f.done?s(f.value):o(f.value).then(c,r)}d((n=n.apply(t,[])).next())})}function Z(t,e,i,n){if(typeof e=="function"?t!==e||!n:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return i==="m"?n:i==="a"?n.call(t):n?n.value:e.get(t)}class p extends Error{constructor(e,i=0,n="",o=""){super(e),this.name="AppwriteException",this.message=e,this.code=i,this.type=n,this.response=o}}class h{constructor(){this.config={endpoint:"https://cloud.appwrite.io/v1",endpointRealtime:"",project:"",jwt:"",locale:"",session:"",devkey:""},this.headers={"x-sdk-name":"Web","x-sdk-platform":"client","x-sdk-language":"web","x-sdk-version":"21.0.0","X-Appwrite-Response-Format":"1.8.0"},this.realtime={socket:void 0,timeout:void 0,heartbeat:void 0,url:"",channels:new Set,subscriptions:new Map,subscriptionsCounter:0,reconnect:!0,reconnectAttempts:0,lastMessage:void 0,connect:()=>{clearTimeout(this.realtime.timeout),this.realtime.timeout=window?.setTimeout(()=>{this.realtime.createSocket()},50)},getTimeout:()=>{switch(!0){case this.realtime.reconnectAttempts<5:return 1e3;case this.realtime.reconnectAttempts<15:return 5e3;case this.realtime.reconnectAttempts<100:return 1e4;default:return 6e4}},createHeartbeat:()=>{this.realtime.heartbeat&&clearTimeout(this.realtime.heartbeat),this.realtime.heartbeat=window?.setInterval(()=>{var e;(e=this.realtime.socket)===null||e===void 0||e.send(JSON.stringify({type:"ping"}))},2e4)},createSocket:()=>{var e,i,n;if(this.realtime.channels.size<1){this.realtime.reconnect=!1,(e=this.realtime.socket)===null||e===void 0||e.close();return}const o=new URLSearchParams;o.set("project",this.config.project),this.realtime.channels.forEach(a=>{o.append("channels[]",a)});const s=this.config.endpointRealtime+"/realtime?"+o.toString();(s!==this.realtime.url||!this.realtime.socket||((i=this.realtime.socket)===null||i===void 0?void 0:i.readyState)>WebSocket.OPEN)&&(this.realtime.socket&&((n=this.realtime.socket)===null||n===void 0?void 0:n.readyState)<WebSocket.CLOSING&&(this.realtime.reconnect=!1,this.realtime.socket.close()),this.realtime.url=s,this.realtime.socket=new WebSocket(s),this.realtime.socket.addEventListener("message",this.realtime.onMessage),this.realtime.socket.addEventListener("open",a=>{this.realtime.reconnectAttempts=0,this.realtime.createHeartbeat()}),this.realtime.socket.addEventListener("close",a=>{var c,r,d;if(!this.realtime.reconnect||((r=(c=this.realtime)===null||c===void 0?void 0:c.lastMessage)===null||r===void 0?void 0:r.type)==="error"&&((d=this.realtime)===null||d===void 0?void 0:d.lastMessage.data).code===1008){this.realtime.reconnect=!0;return}const f=this.realtime.getTimeout();console.error(`Realtime got disconnected. Reconnect will be attempted in ${f/1e3} seconds.`,a.reason),setTimeout(()=>{this.realtime.reconnectAttempts++,this.realtime.createSocket()},f)}))},onMessage:e=>{var i,n;try{const o=JSON.parse(e.data);switch(this.realtime.lastMessage=o,o.type){case"connected":const s=JSON.parse((i=window.localStorage.getItem("cookieFallback"))!==null&&i!==void 0?i:"{}"),a=s?.[`a_session_${this.config.project}`],c=o.data;a&&!c.user&&((n=this.realtime.socket)===null||n===void 0||n.send(JSON.stringify({type:"authentication",data:{session:a}})));break;case"event":let r=o.data;if(r?.channels){if(!r.channels.some(f=>this.realtime.channels.has(f)))return;this.realtime.subscriptions.forEach(f=>{r.channels.some(l=>f.channels.includes(l))&&setTimeout(()=>f.callback(r))})}break;case"pong":break;case"error":throw o.data;default:break}}catch(o){console.error(o)}},cleanUp:e=>{this.realtime.channels.forEach(i=>{e.includes(i)&&(Array.from(this.realtime.subscriptions).some(([o,s])=>s.channels.includes(i))||this.realtime.channels.delete(i))})}}}setEndpoint(e){if(!e.startsWith("http://")&&!e.startsWith("https://"))throw new p("Invalid endpoint URL: "+e);return this.config.endpoint=e,this.config.endpointRealtime=e.replace("https://","wss://").replace("http://","ws://"),this}setEndpointRealtime(e){if(!e.startsWith("ws://")&&!e.startsWith("wss://"))throw new p("Invalid realtime endpoint URL: "+e);return this.config.endpointRealtime=e,this}setProject(e){return this.headers["X-Appwrite-Project"]=e,this.config.project=e,this}setJWT(e){return this.headers["X-Appwrite-JWT"]=e,this.config.jwt=e,this}setLocale(e){return this.headers["X-Appwrite-Locale"]=e,this.config.locale=e,this}setSession(e){return this.headers["X-Appwrite-Session"]=e,this.config.session=e,this}setDevKey(e){return this.headers["X-Appwrite-Dev-Key"]=e,this.config.devkey=e,this}subscribe(e,i){let n=typeof e=="string"?[e]:e;n.forEach(s=>this.realtime.channels.add(s));const o=this.realtime.subscriptionsCounter++;return this.realtime.subscriptions.set(o,{channels:n,callback:i}),this.realtime.connect(),()=>{this.realtime.subscriptions.delete(o),this.realtime.cleanUp(n),this.realtime.connect()}}prepareRequest(e,i,n={},o={}){if(e=e.toUpperCase(),n=Object.assign({},this.headers,n),typeof window<"u"&&window.localStorage){const a=window.localStorage.getItem("cookieFallback");a&&(n["X-Fallback-Cookies"]=a)}let s={method:e,headers:n};if(n["X-Appwrite-Dev-Key"]===void 0&&(s.credentials="include"),e==="GET")for(const[a,c]of Object.entries(h.flatten(o)))i.searchParams.append(a,c);else switch(n["content-type"]){case"application/json":s.body=JSON.stringify(o);break;case"multipart/form-data":const a=new FormData;for(const[c,r]of Object.entries(o))if(r instanceof File)a.append(c,r,r.name);else if(Array.isArray(r))for(const d of r)a.append(`${c}[]`,d);else a.append(c,r);s.body=a,delete n["content-type"];break}return{uri:i.toString(),options:s}}chunkedUpload(e,i,n={},o={},s){var a;return I(this,void 0,void 0,function*(){const[c,r]=(a=Object.entries(o).find(([l,u])=>u instanceof File))!==null&&a!==void 0?a:[];if(!r||!c)throw new Error("File not found in payload");if(r.size<=h.CHUNK_SIZE)return yield this.call(e,i,n,o);let d=0,f=null;for(;d<r.size;){let l=d+h.CHUNK_SIZE;l>=r.size&&(l=r.size),n["content-range"]=`bytes ${d}-${l-1}/${r.size}`;const u=r.slice(d,l);let y=Object.assign({},o);y[c]=new File([u],r.name),f=yield this.call(e,i,n,y),s&&typeof s=="function"&&s({$id:f.$id,progress:Math.round(l/r.size*100),sizeUploaded:l,chunksTotal:Math.ceil(r.size/h.CHUNK_SIZE),chunksUploaded:Math.ceil(l/h.CHUNK_SIZE)}),f&&f.$id&&(n["x-appwrite-id"]=f.$id),d=l}return f})}ping(){return I(this,void 0,void 0,function*(){return this.call("GET",new URL(this.config.endpoint+"/ping"))})}call(e,i,n={},o={},s="json"){var a,c;return I(this,void 0,void 0,function*(){const{uri:r,options:d}=this.prepareRequest(e,i,n,o);let f=null;const l=yield fetch(r,d);if(l.type==="opaque")throw new p(`Invalid Origin. Register your new client (${window.location.host}) as a new Web platform on your project console dashboard`,403,"forbidden","");const u=l.headers.get("x-appwrite-warning");if(u&&u.split(";").forEach(w=>console.warn("Warning: "+w)),!((a=l.headers.get("content-type"))===null||a===void 0)&&a.includes("application/json")?f=yield l.json():s==="arrayBuffer"?f=yield l.arrayBuffer():f={message:yield l.text()},400<=l.status){let w="";throw!((c=l.headers.get("content-type"))===null||c===void 0)&&c.includes("application/json")||s==="arrayBuffer"?w=JSON.stringify(f):w=f?.message,new p(f?.message,l.status,f?.type,w)}const y=l.headers.get("X-Fallback-Cookies");return typeof window<"u"&&window.localStorage&&y&&(window.console.warn("Appwrite is using localStorage for session management. Increase your security by adding a custom domain as your API endpoint."),window.localStorage.setItem("cookieFallback",y)),f})}static flatten(e,i=""){let n={};for(const[o,s]of Object.entries(e)){let a=i?i+"["+o+"]":o;Array.isArray(s)?n=Object.assign(Object.assign({},n),h.flatten(s,a)):n[a]=s}return n}}h.CHUNK_SIZE=1024*1024*5;class m{constructor(e){this.client=e}static flatten(e,i=""){let n={};for(const[o,s]of Object.entries(e)){let a=i?i+"["+o+"]":o;Array.isArray(s)?n=Object.assign(Object.assign({},n),m.flatten(s,a)):n[a]=s}return n}}m.CHUNK_SIZE=5*1024*1024;class X{constructor(e){this.client=e}get(){const e="/account",i={},n=new URL(this.client.config.endpoint+e),o={};return this.client.call("get",n,o,i)}create(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={userId:e,email:i[0],password:i[1],name:i[2]};const o=n.userId,s=n.email,a=n.password,c=n.name;if(typeof o>"u")throw new p('Missing required parameter: "userId"');if(typeof s>"u")throw new p('Missing required parameter: "email"');if(typeof a>"u")throw new p('Missing required parameter: "password"');const r="/account",d={};typeof o<"u"&&(d.userId=o),typeof s<"u"&&(d.email=s),typeof a<"u"&&(d.password=a),typeof c<"u"&&(d.name=c);const f=new URL(this.client.config.endpoint+r),l={"content-type":"application/json"};return this.client.call("post",f,l,d)}updateEmail(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={email:e,password:i[0]};const o=n.email,s=n.password;if(typeof o>"u")throw new p('Missing required parameter: "email"');if(typeof s>"u")throw new p('Missing required parameter: "password"');const a="/account/email",c={};typeof o<"u"&&(c.email=o),typeof s<"u"&&(c.password=s);const r=new URL(this.client.config.endpoint+a),d={"content-type":"application/json"};return this.client.call("patch",r,d,c)}listIdentities(e){let i;!e||e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={queries:e};const n=i.queries,o="/account/identities",s={};typeof n<"u"&&(s.queries=n);const a=new URL(this.client.config.endpoint+o),c={};return this.client.call("get",a,c,s)}deleteIdentity(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={identityId:e};const n=i.identityId;if(typeof n>"u")throw new p('Missing required parameter: "identityId"');const o="/account/identities/{identityId}".replace("{identityId}",n),s={},a=new URL(this.client.config.endpoint+o),c={"content-type":"application/json"};return this.client.call("delete",a,c,s)}createJWT(){const e="/account/jwts",i={},n=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("post",n,o,i)}listLogs(e){let i;!e||e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={queries:e};const n=i.queries,o="/account/logs",s={};typeof n<"u"&&(s.queries=n);const a=new URL(this.client.config.endpoint+o),c={};return this.client.call("get",a,c,s)}updateMFA(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={mfa:e};const n=i.mfa;if(typeof n>"u")throw new p('Missing required parameter: "mfa"');const o="/account/mfa",s={};typeof n<"u"&&(s.mfa=n);const a=new URL(this.client.config.endpoint+o),c={"content-type":"application/json"};return this.client.call("patch",a,c,s)}createMfaAuthenticator(e){let i;e&&typeof e=="object"&&!Array.isArray(e)&&"type"in e?i=e||{}:i={type:e};const n=i.type;if(typeof n>"u")throw new p('Missing required parameter: "type"');const o="/account/mfa/authenticators/{type}".replace("{type}",n),s={},a=new URL(this.client.config.endpoint+o),c={"content-type":"application/json"};return this.client.call("post",a,c,s)}createMFAAuthenticator(e){let i;e&&typeof e=="object"&&!Array.isArray(e)&&"type"in e?i=e||{}:i={type:e};const n=i.type;if(typeof n>"u")throw new p('Missing required parameter: "type"');const o="/account/mfa/authenticators/{type}".replace("{type}",n),s={},a=new URL(this.client.config.endpoint+o),c={"content-type":"application/json"};return this.client.call("post",a,c,s)}updateMfaAuthenticator(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)&&"type"in e?n=e||{}:n={type:e,otp:i[0]};const o=n.type,s=n.otp;if(typeof o>"u")throw new p('Missing required parameter: "type"');if(typeof s>"u")throw new p('Missing required parameter: "otp"');const a="/account/mfa/authenticators/{type}".replace("{type}",o),c={};typeof s<"u"&&(c.otp=s);const r=new URL(this.client.config.endpoint+a),d={"content-type":"application/json"};return this.client.call("put",r,d,c)}updateMFAAuthenticator(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)&&"type"in e?n=e||{}:n={type:e,otp:i[0]};const o=n.type,s=n.otp;if(typeof o>"u")throw new p('Missing required parameter: "type"');if(typeof s>"u")throw new p('Missing required parameter: "otp"');const a="/account/mfa/authenticators/{type}".replace("{type}",o),c={};typeof s<"u"&&(c.otp=s);const r=new URL(this.client.config.endpoint+a),d={"content-type":"application/json"};return this.client.call("put",r,d,c)}deleteMfaAuthenticator(e){let i;e&&typeof e=="object"&&!Array.isArray(e)&&"type"in e?i=e||{}:i={type:e};const n=i.type;if(typeof n>"u")throw new p('Missing required parameter: "type"');const o="/account/mfa/authenticators/{type}".replace("{type}",n),s={},a=new URL(this.client.config.endpoint+o),c={"content-type":"application/json"};return this.client.call("delete",a,c,s)}deleteMFAAuthenticator(e){let i;e&&typeof e=="object"&&!Array.isArray(e)&&"type"in e?i=e||{}:i={type:e};const n=i.type;if(typeof n>"u")throw new p('Missing required parameter: "type"');const o="/account/mfa/authenticators/{type}".replace("{type}",n),s={},a=new URL(this.client.config.endpoint+o),c={"content-type":"application/json"};return this.client.call("delete",a,c,s)}createMfaChallenge(e){let i;e&&typeof e=="object"&&!Array.isArray(e)&&"factor"in e?i=e||{}:i={factor:e};const n=i.factor;if(typeof n>"u")throw new p('Missing required parameter: "factor"');const o="/account/mfa/challenge",s={};typeof n<"u"&&(s.factor=n);const a=new URL(this.client.config.endpoint+o),c={"content-type":"application/json"};return this.client.call("post",a,c,s)}createMFAChallenge(e){let i;e&&typeof e=="object"&&!Array.isArray(e)&&"factor"in e?i=e||{}:i={factor:e};const n=i.factor;if(typeof n>"u")throw new p('Missing required parameter: "factor"');const o="/account/mfa/challenge",s={};typeof n<"u"&&(s.factor=n);const a=new URL(this.client.config.endpoint+o),c={"content-type":"application/json"};return this.client.call("post",a,c,s)}updateMfaChallenge(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={challengeId:e,otp:i[0]};const o=n.challengeId,s=n.otp;if(typeof o>"u")throw new p('Missing required parameter: "challengeId"');if(typeof s>"u")throw new p('Missing required parameter: "otp"');const a="/account/mfa/challenge",c={};typeof o<"u"&&(c.challengeId=o),typeof s<"u"&&(c.otp=s);const r=new URL(this.client.config.endpoint+a),d={"content-type":"application/json"};return this.client.call("put",r,d,c)}updateMFAChallenge(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={challengeId:e,otp:i[0]};const o=n.challengeId,s=n.otp;if(typeof o>"u")throw new p('Missing required parameter: "challengeId"');if(typeof s>"u")throw new p('Missing required parameter: "otp"');const a="/account/mfa/challenge",c={};typeof o<"u"&&(c.challengeId=o),typeof s<"u"&&(c.otp=s);const r=new URL(this.client.config.endpoint+a),d={"content-type":"application/json"};return this.client.call("put",r,d,c)}listMfaFactors(){const e="/account/mfa/factors",i={},n=new URL(this.client.config.endpoint+e),o={};return this.client.call("get",n,o,i)}listMFAFactors(){const e="/account/mfa/factors",i={},n=new URL(this.client.config.endpoint+e),o={};return this.client.call("get",n,o,i)}getMfaRecoveryCodes(){const e="/account/mfa/recovery-codes",i={},n=new URL(this.client.config.endpoint+e),o={};return this.client.call("get",n,o,i)}getMFARecoveryCodes(){const e="/account/mfa/recovery-codes",i={},n=new URL(this.client.config.endpoint+e),o={};return this.client.call("get",n,o,i)}createMfaRecoveryCodes(){const e="/account/mfa/recovery-codes",i={},n=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("post",n,o,i)}createMFARecoveryCodes(){const e="/account/mfa/recovery-codes",i={},n=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("post",n,o,i)}updateMfaRecoveryCodes(){const e="/account/mfa/recovery-codes",i={},n=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("patch",n,o,i)}updateMFARecoveryCodes(){const e="/account/mfa/recovery-codes",i={},n=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("patch",n,o,i)}updateName(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={name:e};const n=i.name;if(typeof n>"u")throw new p('Missing required parameter: "name"');const o="/account/name",s={};typeof n<"u"&&(s.name=n);const a=new URL(this.client.config.endpoint+o),c={"content-type":"application/json"};return this.client.call("patch",a,c,s)}updatePassword(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={password:e,oldPassword:i[0]};const o=n.password,s=n.oldPassword;if(typeof o>"u")throw new p('Missing required parameter: "password"');const a="/account/password",c={};typeof o<"u"&&(c.password=o),typeof s<"u"&&(c.oldPassword=s);const r=new URL(this.client.config.endpoint+a),d={"content-type":"application/json"};return this.client.call("patch",r,d,c)}updatePhone(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={phone:e,password:i[0]};const o=n.phone,s=n.password;if(typeof o>"u")throw new p('Missing required parameter: "phone"');if(typeof s>"u")throw new p('Missing required parameter: "password"');const a="/account/phone",c={};typeof o<"u"&&(c.phone=o),typeof s<"u"&&(c.password=s);const r=new URL(this.client.config.endpoint+a),d={"content-type":"application/json"};return this.client.call("patch",r,d,c)}getPrefs(){const e="/account/prefs",i={},n=new URL(this.client.config.endpoint+e),o={};return this.client.call("get",n,o,i)}updatePrefs(e){let i;e&&typeof e=="object"&&!Array.isArray(e)&&"prefs"in e?i=e||{}:i={prefs:e};const n=i.prefs;if(typeof n>"u")throw new p('Missing required parameter: "prefs"');const o="/account/prefs",s={};typeof n<"u"&&(s.prefs=n);const a=new URL(this.client.config.endpoint+o),c={"content-type":"application/json"};return this.client.call("patch",a,c,s)}createRecovery(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={email:e,url:i[0]};const o=n.email,s=n.url;if(typeof o>"u")throw new p('Missing required parameter: "email"');if(typeof s>"u")throw new p('Missing required parameter: "url"');const a="/account/recovery",c={};typeof o<"u"&&(c.email=o),typeof s<"u"&&(c.url=s);const r=new URL(this.client.config.endpoint+a),d={"content-type":"application/json"};return this.client.call("post",r,d,c)}updateRecovery(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={userId:e,secret:i[0],password:i[1]};const o=n.userId,s=n.secret,a=n.password;if(typeof o>"u")throw new p('Missing required parameter: "userId"');if(typeof s>"u")throw new p('Missing required parameter: "secret"');if(typeof a>"u")throw new p('Missing required parameter: "password"');const c="/account/recovery",r={};typeof o<"u"&&(r.userId=o),typeof s<"u"&&(r.secret=s),typeof a<"u"&&(r.password=a);const d=new URL(this.client.config.endpoint+c),f={"content-type":"application/json"};return this.client.call("put",d,f,r)}listSessions(){const e="/account/sessions",i={},n=new URL(this.client.config.endpoint+e),o={};return this.client.call("get",n,o,i)}deleteSessions(){const e="/account/sessions",i={},n=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("delete",n,o,i)}createAnonymousSession(){const e="/account/sessions/anonymous",i={},n=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("post",n,o,i)}createEmailPasswordSession(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={email:e,password:i[0]};const o=n.email,s=n.password;if(typeof o>"u")throw new p('Missing required parameter: "email"');if(typeof s>"u")throw new p('Missing required parameter: "password"');const a="/account/sessions/email",c={};typeof o<"u"&&(c.email=o),typeof s<"u"&&(c.password=s);const r=new URL(this.client.config.endpoint+a),d={"content-type":"application/json"};return this.client.call("post",r,d,c)}updateMagicURLSession(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={userId:e,secret:i[0]};const o=n.userId,s=n.secret;if(typeof o>"u")throw new p('Missing required parameter: "userId"');if(typeof s>"u")throw new p('Missing required parameter: "secret"');const a="/account/sessions/magic-url",c={};typeof o<"u"&&(c.userId=o),typeof s<"u"&&(c.secret=s);const r=new URL(this.client.config.endpoint+a),d={"content-type":"application/json"};return this.client.call("put",r,d,c)}createOAuth2Session(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)&&"provider"in e?n=e||{}:n={provider:e,success:i[0],failure:i[1],scopes:i[2]};const o=n.provider,s=n.success,a=n.failure,c=n.scopes;if(typeof o>"u")throw new p('Missing required parameter: "provider"');const r="/account/sessions/oauth2/{provider}".replace("{provider}",o),d={};typeof s<"u"&&(d.success=s),typeof a<"u"&&(d.failure=a),typeof c<"u"&&(d.scopes=c);const f=new URL(this.client.config.endpoint+r);d.project=this.client.config.project;for(const[l,u]of Object.entries(m.flatten(d)))f.searchParams.append(l,u);if(typeof window<"u"&&window?.location){window.location.href=f.toString();return}else return f.toString()}updatePhoneSession(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={userId:e,secret:i[0]};const o=n.userId,s=n.secret;if(typeof o>"u")throw new p('Missing required parameter: "userId"');if(typeof s>"u")throw new p('Missing required parameter: "secret"');const a="/account/sessions/phone",c={};typeof o<"u"&&(c.userId=o),typeof s<"u"&&(c.secret=s);const r=new URL(this.client.config.endpoint+a),d={"content-type":"application/json"};return this.client.call("put",r,d,c)}createSession(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={userId:e,secret:i[0]};const o=n.userId,s=n.secret;if(typeof o>"u")throw new p('Missing required parameter: "userId"');if(typeof s>"u")throw new p('Missing required parameter: "secret"');const a="/account/sessions/token",c={};typeof o<"u"&&(c.userId=o),typeof s<"u"&&(c.secret=s);const r=new URL(this.client.config.endpoint+a),d={"content-type":"application/json"};return this.client.call("post",r,d,c)}getSession(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={sessionId:e};const n=i.sessionId;if(typeof n>"u")throw new p('Missing required parameter: "sessionId"');const o="/account/sessions/{sessionId}".replace("{sessionId}",n),s={},a=new URL(this.client.config.endpoint+o),c={};return this.client.call("get",a,c,s)}updateSession(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={sessionId:e};const n=i.sessionId;if(typeof n>"u")throw new p('Missing required parameter: "sessionId"');const o="/account/sessions/{sessionId}".replace("{sessionId}",n),s={},a=new URL(this.client.config.endpoint+o),c={"content-type":"application/json"};return this.client.call("patch",a,c,s)}deleteSession(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={sessionId:e};const n=i.sessionId;if(typeof n>"u")throw new p('Missing required parameter: "sessionId"');const o="/account/sessions/{sessionId}".replace("{sessionId}",n),s={},a=new URL(this.client.config.endpoint+o),c={"content-type":"application/json"};return this.client.call("delete",a,c,s)}updateStatus(){const e="/account/status",i={},n=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("patch",n,o,i)}createPushTarget(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={targetId:e,identifier:i[0],providerId:i[1]};const o=n.targetId,s=n.identifier,a=n.providerId;if(typeof o>"u")throw new p('Missing required parameter: "targetId"');if(typeof s>"u")throw new p('Missing required parameter: "identifier"');const c="/account/targets/push",r={};typeof o<"u"&&(r.targetId=o),typeof s<"u"&&(r.identifier=s),typeof a<"u"&&(r.providerId=a);const d=new URL(this.client.config.endpoint+c),f={"content-type":"application/json"};return this.client.call("post",d,f,r)}updatePushTarget(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={targetId:e,identifier:i[0]};const o=n.targetId,s=n.identifier;if(typeof o>"u")throw new p('Missing required parameter: "targetId"');if(typeof s>"u")throw new p('Missing required parameter: "identifier"');const a="/account/targets/{targetId}/push".replace("{targetId}",o),c={};typeof s<"u"&&(c.identifier=s);const r=new URL(this.client.config.endpoint+a),d={"content-type":"application/json"};return this.client.call("put",r,d,c)}deletePushTarget(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={targetId:e};const n=i.targetId;if(typeof n>"u")throw new p('Missing required parameter: "targetId"');const o="/account/targets/{targetId}/push".replace("{targetId}",n),s={},a=new URL(this.client.config.endpoint+o),c={"content-type":"application/json"};return this.client.call("delete",a,c,s)}createEmailToken(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={userId:e,email:i[0],phrase:i[1]};const o=n.userId,s=n.email,a=n.phrase;if(typeof o>"u")throw new p('Missing required parameter: "userId"');if(typeof s>"u")throw new p('Missing required parameter: "email"');const c="/account/tokens/email",r={};typeof o<"u"&&(r.userId=o),typeof s<"u"&&(r.email=s),typeof a<"u"&&(r.phrase=a);const d=new URL(this.client.config.endpoint+c),f={"content-type":"application/json"};return this.client.call("post",d,f,r)}createMagicURLToken(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={userId:e,email:i[0],url:i[1],phrase:i[2]};const o=n.userId,s=n.email,a=n.url,c=n.phrase;if(typeof o>"u")throw new p('Missing required parameter: "userId"');if(typeof s>"u")throw new p('Missing required parameter: "email"');const r="/account/tokens/magic-url",d={};typeof o<"u"&&(d.userId=o),typeof s<"u"&&(d.email=s),typeof a<"u"&&(d.url=a),typeof c<"u"&&(d.phrase=c);const f=new URL(this.client.config.endpoint+r),l={"content-type":"application/json"};return this.client.call("post",f,l,d)}createOAuth2Token(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)&&"provider"in e?n=e||{}:n={provider:e,success:i[0],failure:i[1],scopes:i[2]};const o=n.provider,s=n.success,a=n.failure,c=n.scopes;if(typeof o>"u")throw new p('Missing required parameter: "provider"');const r="/account/tokens/oauth2/{provider}".replace("{provider}",o),d={};typeof s<"u"&&(d.success=s),typeof a<"u"&&(d.failure=a),typeof c<"u"&&(d.scopes=c);const f=new URL(this.client.config.endpoint+r);d.project=this.client.config.project;for(const[l,u]of Object.entries(m.flatten(d)))f.searchParams.append(l,u);if(typeof window<"u"&&window?.location){window.location.href=f.toString();return}else return f.toString()}createPhoneToken(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={userId:e,phone:i[0]};const o=n.userId,s=n.phone;if(typeof o>"u")throw new p('Missing required parameter: "userId"');if(typeof s>"u")throw new p('Missing required parameter: "phone"');const a="/account/tokens/phone",c={};typeof o<"u"&&(c.userId=o),typeof s<"u"&&(c.phone=s);const r=new URL(this.client.config.endpoint+a),d={"content-type":"application/json"};return this.client.call("post",r,d,c)}createVerification(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={url:e};const n=i.url;if(typeof n>"u")throw new p('Missing required parameter: "url"');const o="/account/verification",s={};typeof n<"u"&&(s.url=n);const a=new URL(this.client.config.endpoint+o),c={"content-type":"application/json"};return this.client.call("post",a,c,s)}updateVerification(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={userId:e,secret:i[0]};const o=n.userId,s=n.secret;if(typeof o>"u")throw new p('Missing required parameter: "userId"');if(typeof s>"u")throw new p('Missing required parameter: "secret"');const a="/account/verification",c={};typeof o<"u"&&(c.userId=o),typeof s<"u"&&(c.secret=s);const r=new URL(this.client.config.endpoint+a),d={"content-type":"application/json"};return this.client.call("put",r,d,c)}createPhoneVerification(){const e="/account/verification/phone",i={},n=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("post",n,o,i)}updatePhoneVerification(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={userId:e,secret:i[0]};const o=n.userId,s=n.secret;if(typeof o>"u")throw new p('Missing required parameter: "userId"');if(typeof s>"u")throw new p('Missing required parameter: "secret"');const a="/account/verification/phone",c={};typeof o<"u"&&(c.userId=o),typeof s<"u"&&(c.secret=s);const r=new URL(this.client.config.endpoint+a),d={"content-type":"application/json"};return this.client.call("put",r,d,c)}}var E,z;class b{static custom(e){return e}static unique(e=7){const i=Z(b,E,"m",z).call(b);let n="";for(let o=0;o<e;o++){const s=Math.floor(Math.random()*16).toString(16);n+=s}return i+n}}E=b,z=function(){const e=new Date,i=Math.floor(e.getTime()/1e3),n=e.getMilliseconds();return i.toString(16)+n.toString(16).padStart(5,"0")};var k;(function(t){t.Totp="totp"})(k||(k={}));var S;(function(t){t.Email="email",t.Phone="phone",t.Totp="totp",t.Recoverycode="recoverycode"})(S||(S={}));var R;(function(t){t.Amazon="amazon",t.Apple="apple",t.Auth0="auth0",t.Authentik="authentik",t.Autodesk="autodesk",t.Bitbucket="bitbucket",t.Bitly="bitly",t.Box="box",t.Dailymotion="dailymotion",t.Discord="discord",t.Disqus="disqus",t.Dropbox="dropbox",t.Etsy="etsy",t.Facebook="facebook",t.Figma="figma",t.Github="github",t.Gitlab="gitlab",t.Google="google",t.Linkedin="linkedin",t.Microsoft="microsoft",t.Notion="notion",t.Oidc="oidc",t.Okta="okta",t.Paypal="paypal",t.PaypalSandbox="paypalSandbox",t.Podio="podio",t.Salesforce="salesforce",t.Slack="slack",t.Spotify="spotify",t.Stripe="stripe",t.Tradeshift="tradeshift",t.TradeshiftBox="tradeshiftBox",t.Twitch="twitch",t.Wordpress="wordpress",t.Yahoo="yahoo",t.Yammer="yammer",t.Yandex="yandex",t.Zoho="zoho",t.Zoom="zoom",t.Mock="mock"})(R||(R={}));var L;(function(t){t.AvantBrowser="aa",t.AndroidWebViewBeta="an",t.GoogleChrome="ch",t.GoogleChromeIOS="ci",t.GoogleChromeMobile="cm",t.Chromium="cr",t.MozillaFirefox="ff",t.Safari="sf",t.MobileSafari="mf",t.MicrosoftEdge="ps",t.MicrosoftEdgeIOS="oi",t.OperaMini="om",t.Opera="op",t.OperaNext="on"})(L||(L={}));var U;(function(t){t.AmericanExpress="amex",t.Argencard="argencard",t.Cabal="cabal",t.Cencosud="cencosud",t.DinersClub="diners",t.Discover="discover",t.Elo="elo",t.Hipercard="hipercard",t.JCB="jcb",t.Mastercard="mastercard",t.Naranja="naranja",t.TarjetaShopping="targeta-shopping",t.UnionPay="unionpay",t.Visa="visa",t.MIR="mir",t.Maestro="maestro",t.Rupay="rupay"})(U||(U={}));var q;(function(t){t.Afghanistan="af",t.Angola="ao",t.Albania="al",t.Andorra="ad",t.UnitedArabEmirates="ae",t.Argentina="ar",t.Armenia="am",t.AntiguaAndBarbuda="ag",t.Australia="au",t.Austria="at",t.Azerbaijan="az",t.Burundi="bi",t.Belgium="be",t.Benin="bj",t.BurkinaFaso="bf",t.Bangladesh="bd",t.Bulgaria="bg",t.Bahrain="bh",t.Bahamas="bs",t.BosniaAndHerzegovina="ba",t.Belarus="by",t.Belize="bz",t.Bolivia="bo",t.Brazil="br",t.Barbados="bb",t.BruneiDarussalam="bn",t.Bhutan="bt",t.Botswana="bw",t.CentralAfricanRepublic="cf",t.Canada="ca",t.Switzerland="ch",t.Chile="cl",t.China="cn",t.CoteDIvoire="ci",t.Cameroon="cm",t.DemocraticRepublicOfTheCongo="cd",t.RepublicOfTheCongo="cg",t.Colombia="co",t.Comoros="km",t.CapeVerde="cv",t.CostaRica="cr",t.Cuba="cu",t.Cyprus="cy",t.CzechRepublic="cz",t.Germany="de",t.Djibouti="dj",t.Dominica="dm",t.Denmark="dk",t.DominicanRepublic="do",t.Algeria="dz",t.Ecuador="ec",t.Egypt="eg",t.Eritrea="er",t.Spain="es",t.Estonia="ee",t.Ethiopia="et",t.Finland="fi",t.Fiji="fj",t.France="fr",t.MicronesiaFederatedStatesOf="fm",t.Gabon="ga",t.UnitedKingdom="gb",t.Georgia="ge",t.Ghana="gh",t.Guinea="gn",t.Gambia="gm",t.GuineaBissau="gw",t.EquatorialGuinea="gq",t.Greece="gr",t.Grenada="gd",t.Guatemala="gt",t.Guyana="gy",t.Honduras="hn",t.Croatia="hr",t.Haiti="ht",t.Hungary="hu",t.Indonesia="id",t.India="in",t.Ireland="ie",t.IranIslamicRepublicOf="ir",t.Iraq="iq",t.Iceland="is",t.Israel="il",t.Italy="it",t.Jamaica="jm",t.Jordan="jo",t.Japan="jp",t.Kazakhstan="kz",t.Kenya="ke",t.Kyrgyzstan="kg",t.Cambodia="kh",t.Kiribati="ki",t.SaintKittsAndNevis="kn",t.SouthKorea="kr",t.Kuwait="kw",t.LaoPeopleSDemocraticRepublic="la",t.Lebanon="lb",t.Liberia="lr",t.Libya="ly",t.SaintLucia="lc",t.Liechtenstein="li",t.SriLanka="lk",t.Lesotho="ls",t.Lithuania="lt",t.Luxembourg="lu",t.Latvia="lv",t.Morocco="ma",t.Monaco="mc",t.Moldova="md",t.Madagascar="mg",t.Maldives="mv",t.Mexico="mx",t.MarshallIslands="mh",t.NorthMacedonia="mk",t.Mali="ml",t.Malta="mt",t.Myanmar="mm",t.Montenegro="me",t.Mongolia="mn",t.Mozambique="mz",t.Mauritania="mr",t.Mauritius="mu",t.Malawi="mw",t.Malaysia="my",t.Namibia="na",t.Niger="ne",t.Nigeria="ng",t.Nicaragua="ni",t.Netherlands="nl",t.Norway="no",t.Nepal="np",t.Nauru="nr",t.NewZealand="nz",t.Oman="om",t.Pakistan="pk",t.Panama="pa",t.Peru="pe",t.Philippines="ph",t.Palau="pw",t.PapuaNewGuinea="pg",t.Poland="pl",t.FrenchPolynesia="pf",t.NorthKorea="kp",t.Portugal="pt",t.Paraguay="py",t.Qatar="qa",t.Romania="ro",t.Russia="ru",t.Rwanda="rw",t.SaudiArabia="sa",t.Sudan="sd",t.Senegal="sn",t.Singapore="sg",t.SolomonIslands="sb",t.SierraLeone="sl",t.ElSalvador="sv",t.SanMarino="sm",t.Somalia="so",t.Serbia="rs",t.SouthSudan="ss",t.SaoTomeAndPrincipe="st",t.Suriname="sr",t.Slovakia="sk",t.Slovenia="si",t.Sweden="se",t.Eswatini="sz",t.Seychelles="sc",t.Syria="sy",t.Chad="td",t.Togo="tg",t.Thailand="th",t.Tajikistan="tj",t.Turkmenistan="tm",t.TimorLeste="tl",t.Tonga="to",t.TrinidadAndTobago="tt",t.Tunisia="tn",t.Turkey="tr",t.Tuvalu="tv",t.Tanzania="tz",t.Uganda="ug",t.Ukraine="ua",t.Uruguay="uy",t.UnitedStates="us",t.Uzbekistan="uz",t.VaticanCity="va",t.SaintVincentAndTheGrenadines="vc",t.Venezuela="ve",t.Vietnam="vn",t.Vanuatu="vu",t.Samoa="ws",t.Yemen="ye",t.SouthAfrica="za",t.Zambia="zm",t.Zimbabwe="zw"})(q||(q={}));var H;(function(t){t.GET="GET",t.POST="POST",t.PUT="PUT",t.PATCH="PATCH",t.DELETE="DELETE",t.OPTIONS="OPTIONS",t.HEAD="HEAD"})(H||(H={}));var P;(function(t){t.Center="center",t.Topleft="top-left",t.Top="top",t.Topright="top-right",t.Left="left",t.Right="right",t.Bottomleft="bottom-left",t.Bottom="bottom",t.Bottomright="bottom-right"})(P||(P={}));var T;(function(t){t.Jpg="jpg",t.Jpeg="jpeg",t.Png="png",t.Webp="webp",t.Heic="heic",t.Avif="avif",t.Gif="gif"})(T||(T={}));const N=new h;N.setEndpoint("https://fra.cloud.appwrite.io/v1").setProject("68e25849002b74c2aeca").setDevKey("07a811bcf0d22de423e332aeef8694684e3b28901d79f856df19d02a04ee8def81a5486d6a173e5474f2286c8a0ed98ea47dbc84a6e612a6025a6e666a3f850a5966cfbb0c57c53274f74bd84247903de36b79e26a334ee1117eede621dcd849ce0451dc027921f518c782c22b366f5b35ddd96ea37b3b0c21eeb18db3e4b97b");const g=new X(N);var Y=_('<p> </p> <form><input type="email" placeholder="Email" name="email" required/> <input type="password" placeholder="Password" name="password" required/> <button type="submit" data-type="login">Login</button> <button type="submit" data-type="register">Register</button></form> <button>Logout</button>',1);function te(t,e){D(e,!1);let i=V(null);async function n(u,y){await g.createEmailPasswordSession({email:u,password:y}),A(i,await g.get()),console.log(j(i))}async function o(u,y){await g.create({userId:b.unique(),email:u,password:y,name:u.split("@")[0]}),n(u,y)}function s(u){u.preventDefault();const y=new FormData(u.target),w=u.submitter.dataset.type;w==="login"?n(y.get("email"),y.get("password")):w==="register"&&o(y.get("email"),y.get("password"))}async function a(){await g.deleteSession({sessionId:"current"}),A(i,null)}x();var c=Y(),r=K(c),d=J(r,!0);W(r);var f=M(r,2),l=M(f,2);B(()=>$(d,j(i)?`Logged in as ${j(i).name}`:"Not logged in")),v("submit",f,s),v("click",l,a),G(t,c),C()}export{te as component};
